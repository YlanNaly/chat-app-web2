import Navbar from "@/components/molecules/navbar";
import {  Container, Row } from "react-bootstrap";
import { Channel, ResponseChannel } from "../api/requests";
import ChannelComponent from "@/components/organisms/channel";
import  { useRouter } from "next/router";
import { useEffect, useState } from "react";
import { NextRequest } from "next/server";
import { getChannels } from "@/lib/ApiChannel";
import Head from "next/head";
import Cookies from "js-cookie";
export interface IChannelGrid {
    channels?: Channel[];
}

function DisplayChannel(props:IChannelGrid) {
    const router = useRouter();
    const [response, setResponse] = useState<ResponseChannel>();

    useEffect(()=>{
        {
            getChannels(setResponse);
        }
    },[])

    useEffect(()=>{
        try{
            const token = JSON.parse(localStorage.getItem('users') || "").token;
            if(!token){
                router.push("/login")
            }
        }
        catch(e){
            router.push("/login")
        }
    },[router])
    
    return(
    <>
    <Head>
      <title>Channel section</title>
      <meta name="description" content="Generated by create next app" />
      <meta name="viewport" content="width=device-width, initial-scale=1" />
      <link rel="icon" href="/favicon.ico" />
    </Head>
    <Navbar/>
    {
    response?.channels?.length == undefined || response?.channels?.length < 1  ?
    <center style={{marginTop:"123px"}}><h1>Channels</h1></center> :
    <Container style={{ marginTop:"10px"}}>
      <Row style={{gap:"53px"}}>
      {
      response?.channels?.map((channel:any)=>{
        Cookies.set("channel_id", channel.id?.toString());
        Cookies.set("channel_name", channel.name);
        return(
            <ChannelComponent  channel={channel} key={channel.id}/>
        )
    })}
        </Row>
    </Container>
    }
    </>
    )
}
export default DisplayChannel;